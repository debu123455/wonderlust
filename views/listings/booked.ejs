<% layout("/layouts/boilerplate.ejs") %>
<style>
  .booked-list-row {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
    margin-top: 2rem;
    justify-content: center;
  }
  .booked-card {
    border-radius: 1.5rem;
    overflow: hidden;
    margin: 1.2rem 0.5rem;
    box-shadow: 0 4px 24px #fe424d11, 0 1.5px 8px #fe424d22;
    border: 2px solid transparent;
    background: rgba(255,255,255,0.97);
    transition: box-shadow 0.22s, border 0.22s, transform 0.18s;
    position: relative;
    display: flex;
    flex-direction: column;
    width: 320px;
  }
  .booked-card img {
    border-radius: 1.5rem 1.5rem 0 0;
    object-fit: cover;
    width: 100%;
    height: 180px;
  }
  .booked-card .card-body {
    padding: 1.1rem 1.2rem 1.2rem 1.2rem;
    background: rgba(255,255,255,0.97);
    border-radius: 0 0 1.5rem 1.5rem;
    min-height: 7.5rem;
    flex: 1 1 auto;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }
</style>

<h2 class="text-center mt-4">Your Booked Hotels</h2>
<div class="booked-list-row">
  <% if (bookedListings.length === 0) { %>
    <p class="text-center">You have not booked any hotels yet.</p>
  <% } %>
  <% bookedListings.forEach(listing => { %>
    <div class="booked-card">
      <img src="<%= (listing.image && listing.image.url) ? listing.image.url : '/default.jpg' %>" alt="listing_image">
      <div class="card-body">
        <b><%= listing.title %></b>
        <div style="color:#fe424d;font-weight:600;">&#8377 <%= (listing.price !==null ? listing.price.toLocaleString("en-In") : 'N/A' )
         %> /night</div>
        <div style="font-size:0.95rem;color:#888;">in <%= listing.location %>, <%= listing.country %></div>
        <!-- Remove button -->
        <form action="/listings/<%= listing._id %>/unbook" method="POST" style="margin-top:1em;text-align:right;" class="unbook-form">
          <button type="submit" class="btn btn-danger btn-sm unbook-btn" data-listing-id="<%= listing._id %>" style="border-radius:1em;padding:0.5em 1.2em;font-weight:600;transition:background 0.2s;">
            <i class="fa-solid fa-xmark"></i> Remove
          </button>
        </form>
      </div>
    </div>
  <% }) %>
</div>

<!-- Surprise Me Booked Button -->
<% if (bookedListings.length > 0) { %>
  <button class="surprise-btn" id="surpriseBookedBtn" style="position:fixed;bottom:7.5rem;right:2.5rem;z-index:200;">
    <i class="fa-solid fa-wand-magic-sparkles me-2"></i>Bookings (Booked)
  </button>
<% } %>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Surprise Me button logic
    const btn = document.getElementById('surpriseBookedBtn');
    if(btn) {
      btn.onclick = function() {
        const cards = document.querySelectorAll('.booked-card');
        if(cards.length === 0) return;
        const idx = Math.floor(Math.random() * cards.length);
        const card = cards[idx];
        card.scrollIntoView({ behavior: 'smooth', block: 'center' });
        card.classList.add('animated-popIn', 'animated-delay-1');
        setTimeout(() => card.classList.remove('animated-popIn', 'animated-delay-1'), 1200);
      }
    }

    // Robust AJAX unbook logic using event delegation
    const bookedListRow = document.querySelector('.booked-list-row');
    if (bookedListRow) {
      bookedListRow.addEventListener('submit', function(e) {
        if (e.target.classList.contains('unbook-form')) {
          e.preventDefault();
          const form = e.target;
          const btn = form.querySelector('.unbook-btn');
          const listingId = btn.getAttribute('data-listing-id');
          fetch(`/listings/${listingId}/unbook`, {
            method: 'POST',
            headers: { 'X-Requested-With': 'XMLHttpRequest' },
          })
          .then(res => {
            if(res.ok) {
              // Animate and remove only the clicked card
              const card = form.closest('.booked-card');
              if (card) {
                card.style.transition = 'opacity 0.4s, transform 0.4s';
                card.style.opacity = '0';
                card.style.transform = 'scale(0.95)';
                setTimeout(() => card.remove(), 400);
              } else {
                // Fallback: reload if card not found
                location.reload();
              }
            } else {
              alert('Failed to remove booking.');
            }
          })
          .catch((err) => {
            console.error('AJAX error:', err);
            alert('Failed to remove booking.');
          });
        }
      });
    } else {
      console.error('No .booked-list-row found in DOM');
    }
  });
</script>
